[gd_scene load_steps=11 format=3 uid="uid://dg7ydggu8uw0c"]

[ext_resource type="FontFile" uid="uid://depje1lfv5nx8" path="res://fonts/morris-roman/MorrisRoman-Black.ttf" id="1_6rs50"]
[ext_resource type="FontFile" uid="uid://dhgnmjhvybfng" path="res://fonts/Arial Narrow/arialnarrow.ttf" id="2_ymi3x"]

[sub_resource type="GDScript" id="GDScript_6rs50"]
script/source = "extends MarginContainer

func set_item(data: Inventory.ItemQuantity) -> void:
	if data == null:
		%Tooltip.visible = false
		return
	
	var prefix := (\"%dx \" % [data.quantity]) if data.quantity > 1 else \"\"
	%ItemName.text = prefix + data.item.name
	%ItemName.label_settings.font_color = get_quality_color(data.item.quality)
	%Quality.label_settings.font_color = get_quality_color(data.item.quality)
	%Quality.text = Item.ItemQuality.keys()[data.item.quality]
	%Description.text = data.item.description
	set_major_stats(data.item)
	set_minor_stats(data.item)
	set_equipment_type(data.item)
	set_weapon_type(data.item)
	set_weapon_damage(data.item)
	%Tooltip.visible = true

func set_weapon_damage(item: Item) -> void:
	%WeaponDamageContainer.visible = item.damage != null
	if !%WeaponDamageContainer.visible:
		return
	%Damage.text = \"    %d to %d damage\" % [item.damage.min, item.damage.max]
	%DamageType.text = \"Physical\" if item.damage.type == Item.DamageType.Physical else \"Magical\"

func set_weapon_type(item: Item) -> void:
	%WeaponType.visible = item.weapon_slot != Item.WeaponSlot.None
	if !%WeaponType.visible:
		return
	
	var text := \"\"
	if item.weapon_slot == Item.WeaponSlot.OneHand:
		text = \"One Handed\"
	elif item.weapon_slot == Item.WeaponSlot.OffHand:
		text = \"Off Handed\"
	elif item.weapon_slot == Item.WeaponSlot.MainHand:
		text = \"Main Handed\"
	elif item.weapon_slot == Item.WeaponSlot.TwoHand:
		text = \"Two Handed\"
	else:
		push_error(\"unhandled weapon slot: \" + str(item.weapon_slot))
	%WeaponType.text = text
	
func set_equipment_type(item: Item) -> void:
	%EquipmentContainer.visible = true
	
	if item.slot == Item.EquipmentSlot.None:
		%EquipmentContainer.visible = false
		return
	
	var text := \"\"
	if item.slot == Item.EquipmentSlot.Head:
		text = \"Head\"
	elif item.slot == Item.EquipmentSlot.Chest:
		text = \"Chest\"
	elif item.slot == Item.EquipmentSlot.Shoulders:
		text = \"Shoulders\"
	elif item.slot == Item.EquipmentSlot.Legs:
		text = \"Legs\"
	elif item.slot == Item.EquipmentSlot.Feet:
		text = \"Feet\"
	elif item.slot == Item.EquipmentSlot.Hands:
		text = \"Hands\"
	elif item.slot == Item.EquipmentSlot.Neck:
		text = \"Neck\"
	elif item.slot == Item.EquipmentSlot.Finger:
		text = \"Finger\"
	elif item.slot == Item.EquipmentSlot.Ear:
		text = \"Ear\"
	elif item.slot == Item.EquipmentSlot.Weapon:
		text = \"Weapon\"
	else:
		push_error(\"unhandled equipment slot: \" + str(item.slot))
	
	%EquipmentType.text = text

func set_major_stats(item: Item) -> void:
	var text := \"\"
	
	print_debug(item.stats)
	
	if item.stats.stamina > 0:
		text += '+%d Stamina\\n' % [item.stats.stamina]
	if item.stats.strength > 0:
		text += '+%d Strength\\n' % [item.stats.strength]
	if item.stats.dexterity > 0:
		text += '+%d Dexterity\\n' % [item.stats.dexterity]
	if item.stats.intellect > 0:
		text += '+%d Intellect\\n' % [item.stats.intellect]
	
	if text.ends_with(\"\\n\"):
		text = text.trim_suffix(\"\\n\")
	
	%MajorStats.text = text
	%MajorStatsContainer.visible = text != \"\"
	
func make_minor_stat_str(value: int, stat: String) -> String:
	if value <= 0:
		return \"\"
	
	return \"Increases %s by %d.\\n\" % [stat, value]

func set_minor_stats(item: Item) -> void:
	var text := \"\"
	
	text += make_minor_stat_str(item.stats.critical_power, \"critical power\")
	text += make_minor_stat_str(item.stats.critical_rating, \"critical rating\")
	text += make_minor_stat_str(item.stats.dodge_rating, \"dodge rating\")
	text += make_minor_stat_str(item.stats.health, \"health\")
	text += make_minor_stat_str(item.stats.magic_armor, \"magic armor\")
	text += make_minor_stat_str(item.stats.physical_armor, \"physical armor\")
	text += make_minor_stat_str(item.stats.magic_power, \"magic power\")
	text += make_minor_stat_str(item.stats.physical_power, \"physical power\")
	text += make_minor_stat_str(item.stats.mana, \"mana\")
	
	if text.ends_with(\"\\n\"):
		text = text.trim_suffix(\"\\n\")
	
	%MinorStats.text = text
	%MinorStatsContainer.visible = text != \"\"

func get_quality_color(quality: Item.ItemQuality) -> Color:
		if quality == Item.ItemQuality.Junk:
			return Color.DIM_GRAY
		elif quality == Item.ItemQuality.Common:
			return Color.WHITE_SMOKE			
		elif quality == Item.ItemQuality.Uncommon:
			return Color.LIME_GREEN
		elif quality == Item.ItemQuality.Rare:
			return Color.ROYAL_BLUE
		elif quality == Item.ItemQuality.Epic:
			return Color.DARK_ORCHID
		elif quality == Item.ItemQuality.Legendary:
			return Color.DARK_ORANGE
		return Color.BLACK
		
"

[sub_resource type="LabelSettings" id="LabelSettings_j7qfc"]
font = ExtResource("1_6rs50")
font_size = 24
font_color = Color(0.184314, 1, 0.168627, 1)

[sub_resource type="LabelSettings" id="LabelSettings_6rs50"]
font = ExtResource("1_6rs50")
font_size = 18
font_color = Color(0.184314, 1, 0.168627, 1)

[sub_resource type="LabelSettings" id="LabelSettings_ymi3x"]
font = ExtResource("2_ymi3x")
font_size = 18

[sub_resource type="LabelSettings" id="LabelSettings_dhthj"]
font = ExtResource("2_ymi3x")
font_size = 18

[sub_resource type="LabelSettings" id="LabelSettings_njdqu"]
font = ExtResource("2_ymi3x")
font_size = 18
font_color = Color(0.270588, 1, 0.321569, 1)

[sub_resource type="LabelSettings" id="LabelSettings_2yeg7"]
font = ExtResource("2_ymi3x")
font_size = 18
font_color = Color(1, 1, 0.376471, 1)

[sub_resource type="LabelSettings" id="LabelSettings_qlmxe"]
font = ExtResource("2_ymi3x")
font_color = Color(0, 0.768627, 1, 1)

[node name="MarginContainer" type="MarginContainer"]
size_flags_horizontal = 3
theme_override_constants/margin_left = 3
theme_override_constants/margin_top = 3
theme_override_constants/margin_right = 3
theme_override_constants/margin_bottom = 3
script = SubResource("GDScript_6rs50")

[node name="Tooltip" type="MarginContainer" parent="."]
unique_name_in_owner = true
custom_minimum_size = Vector2(300, 50)
layout_mode = 2

[node name="ColorRect" type="ColorRect" parent="Tooltip"]
visible = false
layout_mode = 2
color = Color(0.219608, 0.219608, 0.219608, 0.784314)

[node name="VBoxContainer" type="VBoxContainer" parent="Tooltip"]
layout_mode = 2
size_flags_vertical = 0

[node name="MarginContainer3" type="MarginContainer" parent="Tooltip/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 5

[node name="VBoxContainer" type="VBoxContainer" parent="Tooltip/VBoxContainer/MarginContainer3"]
layout_mode = 2

[node name="ItemName" type="Label" parent="Tooltip/VBoxContainer/MarginContainer3/VBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 35)
layout_mode = 2
size_flags_vertical = 1
text = "Item Name"
label_settings = SubResource("LabelSettings_j7qfc")
vertical_alignment = 2
autowrap_mode = 3

[node name="Quality" type="Label" parent="Tooltip/VBoxContainer/MarginContainer3/VBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 35)
layout_mode = 2
size_flags_vertical = 1
text = "Uncommon"
label_settings = SubResource("LabelSettings_6rs50")

[node name="EquipmentContainer" type="MarginContainer" parent="Tooltip/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 0
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5

[node name="VBoxContainer" type="VBoxContainer" parent="Tooltip/VBoxContainer/EquipmentContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer"]
layout_mode = 2

[node name="EquipmentType" type="Label" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "Weapon"
label_settings = SubResource("LabelSettings_ymi3x")
autowrap_mode = 3

[node name="WeaponType" type="Label" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "One Handed"
label_settings = SubResource("LabelSettings_dhthj")
horizontal_alignment = 2
autowrap_mode = 3

[node name="WeaponDamageContainer" type="HBoxContainer" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2

[node name="Damage" type="Label" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer/WeaponDamageContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "    100 to 200 damage"
label_settings = SubResource("LabelSettings_ymi3x")
autowrap_mode = 3

[node name="DamageType" type="Label" parent="Tooltip/VBoxContainer/EquipmentContainer/VBoxContainer/WeaponDamageContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "Physical"
label_settings = SubResource("LabelSettings_dhthj")
horizontal_alignment = 2
autowrap_mode = 3

[node name="MajorStatsContainer" type="MarginContainer" parent="Tooltip/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 0
theme_override_constants/margin_right = 5

[node name="MajorStats" type="Label" parent="Tooltip/VBoxContainer/MajorStatsContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "+10 Strength
+5 Stamina"
label_settings = SubResource("LabelSettings_ymi3x")
autowrap_mode = 3

[node name="MinorStatsContainer" type="MarginContainer" parent="Tooltip/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 5
theme_override_constants/margin_right = 5

[node name="MinorStats" type="Label" parent="Tooltip/VBoxContainer/MinorStatsContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "Increases physical power by 10.
Increases dodge rating by 5."
label_settings = SubResource("LabelSettings_njdqu")
autowrap_mode = 3

[node name="MarginContainer" type="MarginContainer" parent="Tooltip/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 5

[node name="Description" type="Label" parent="Tooltip/VBoxContainer/MarginContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_vertical = 1
text = "Some short item description goes here."
label_settings = SubResource("LabelSettings_2yeg7")
autowrap_mode = 3

[node name="MarginContainer2" type="MarginContainer" parent="Tooltip/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 20
theme_override_constants/margin_right = 5

[node name="Description2" type="Label" parent="Tooltip/VBoxContainer/MarginContainer2"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
text = "Options:
  (D)elete Item"
label_settings = SubResource("LabelSettings_qlmxe")
autowrap_mode = 3
